package hw4;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import java.util.stream.Stream;

import hw4.game.Game;
import hw4.maze.Cell;
import hw4.maze.CellComponents;
import hw4.maze.Grid;
import hw4.maze.Row;
import hw4.player.Movement;
import hw4.player.Player;

public class Main {


    
    //---------helper functions------------
    public static void validMoveMessage(){
        System.out.println("You didn't hit a wall, keep gonig to find your way out of the maze!!!"); 
    }    

    public static void invalidMoveMessage(){
        System.out.println("You hit a wall, try again bot loser");     
    }    
    //---------end of helper functions------------
    

    private static Game game;
    private static Grid grid;
    private static Player player;


	public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        
        //intro message
        game = new Game(4);
        Row playerRow = game.getGrid().getRows().getLast();
        Cell PlayerCell = playerRow.getCells().getLast();
        player = new Player(playerRow, PlayerCell);

        System.out.println("You are stuck in a cave, oops, better get out befor Ekin spanks you\nBeware the cave has walls and if you hit them you hurt your head and have to try again... akward...");
        boolean isFree = false;

        while(!isFree){

            //display the grid and show movement options
            game.displayGrid(player);
            System.out.println("Move using W, A, S, D");    
            
            //get input from the scanner
            String input = scanner.nextLine().toUpperCase();

            // Convert input to movement direction
            Movement move = null;
            switch (input) {
                case "W":
                    move = Movement.UP;
                    break;
                case "A":
                    move = Movement.LEFT;
                    break;
                case "S":
                    move = Movement.DOWN;
                    break;
                case "D":
                    move = Movement.RIGHT;
                    break;
                default:
                    System.out.println("Invalid input. Use W, A, S, or D.");
                    continue;
            }

            
            
            if(player.getCurrentCell().getLeft() == CellComponents.EXIT){
                System.out.println("You are in the exit room, press A to escape!");
                if(move == Movement.LEFT) {
                	System.out.println("You escaped! No spankings from Ekin today!!!");
                	isFree = true;
                }
                else {
                	System.out.println("Idiot, all you had to do was move left");
                }
            }
            
            
            boolean success = game.play(move, player); //check if the move was possible or if the player hit a wall or if the player escaped

            if(success){
                validMoveMessage();
            }
            else{
                invalidMoveMessage();
            }

            
            
        }





	}

} 
