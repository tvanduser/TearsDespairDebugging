<?xml version="1.0" encoding="UTF-8"?><testrun name="RowTest" project="SP2025_CS3330_HW4_G0" tests="4" started="4" failures="2" errors="2" ignored="0">
  <testsuite name="hw4.maze.test.RowTest" time="0.073" displayname="RowTest" uniqueid="[engine:junit-jupiter]/[class:hw4.maze.test.RowTest]">
    <testcase name="testSetCellsWithNull" classname="hw4.maze.test.RowTest" time="0.017" displayname="testSetCellsWithNull()" uniqueid="[engine:junit-jupiter]/[class:hw4.maze.test.RowTest]/[method:testSetCellsWithNull()]"/>
    <testcase name="testGetCellsSize" classname="hw4.maze.test.RowTest" time="0.01" displayname="testGetCellsSize()" uniqueid="[engine:junit-jupiter]/[class:hw4.maze.test.RowTest]/[method:testGetCellsSize()]">
      <error>java.lang.NullPointerException: Cannot invoke "java.util.ArrayList.size()" because the return value of "hw4.maze.Row.getCells()" is null&#13;
	at SP2025_CS3330_HW4_G0/hw4.maze.test.RowTest.testGetCellsSize(RowTest.java:63)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testToString" classname="hw4.maze.test.RowTest" time="0.007" displayname="testToString()" uniqueid="[engine:junit-jupiter]/[class:hw4.maze.test.RowTest]/[method:testToString()]">
      <failure>
        <expected>Row [cells=[Cell [left=EXIT, right=APERTURE, up=WALL, down=APERTURE], Cell [left=APERTURE, right=WALL, up=WALL, down=APERTURE], Cell [left=WALL, right=WALL, up=WALL, down=APERTURE]]]</expected>
        <actual>hw4.maze.Row@7502291e</actual>
        org.opentest4j.AssertionFailedError: expected: &lt;Row [cells=[Cell [left=EXIT, right=APERTURE, up=WALL, down=APERTURE], Cell [left=APERTURE, right=WALL, up=WALL, down=APERTURE], Cell [left=WALL, right=WALL, up=WALL, down=APERTURE]]]&gt; but was: &lt;hw4.maze.Row@7502291e&gt;&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)&#13;
	at SP2025_CS3330_HW4_G0/hw4.maze.test.RowTest.testToString(RowTest.java:106)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;

      </failure>
    </testcase>
    <testsuite name="testGetCell(hw4.maze.test.RowTest)" incomplete="true" displayname="testGetCell(Cell, Cell)" parameters="hw4.maze.Cell,hw4.maze.Cell" uniqueid="[engine:junit-jupiter]/[class:hw4.maze.test.RowTest]/[test-template:testGetCell(hw4.maze.Cell, hw4.maze.Cell)]">
      <error>java.lang.NullPointerException: Cannot invoke "java.util.ArrayList.get(int)" because the return value of "hw4.maze.Row.getCells()" is null&#13;
	at SP2025_CS3330_HW4_G0/hw4.maze.test.RowTest.getCellProvider(RowTest.java:73)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)&#13;
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:1024)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:294)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:294)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:215)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:294)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1709)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:570)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:560)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:265)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:636)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	Suppressed: org.junit.platform.commons.PreconditionViolationException: Configuration error: You must configure at least one set of arguments for this @ParameterizedTest&#13;
		at java.base/java.util.stream.AbstractPipeline.close(AbstractPipeline.java:355)&#13;
		at java.base/java.util.stream.ReferencePipeline$7$1FlatMap.accept(ReferencePipeline.java:289)&#13;
		... 9 more&#13;
&#13;
</error>
    </testsuite>
    <testcase name="testSetCell" classname="hw4.maze.test.RowTest" time="0.008" displayname="testSetCell()" uniqueid="[engine:junit-jupiter]/[class:hw4.maze.test.RowTest]/[method:testSetCell()]">
      <failure>
        <expected>[Cell [left=WALL, right=WALL, up=APERTURE, down=APERTURE], Cell [left=WALL, right=APERTURE, up=APERTURE, down=APERTURE], Cell [left=APERTURE, right=WALL, up=APERTURE, down=APERTURE]]</expected>
        <actual>null</actual>
        org.opentest4j.AssertionFailedError: expected: &lt;[Cell [left=WALL, right=WALL, up=APERTURE, down=APERTURE], Cell [left=WALL, right=APERTURE, up=APERTURE, down=APERTURE], Cell [left=APERTURE, right=WALL, up=APERTURE, down=APERTURE]]&gt; but was: &lt;null&gt;&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)&#13;
	at org.junit.jupiter.api@5.11.3/org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1145)&#13;
	at SP2025_CS3330_HW4_G0/hw4.maze.test.RowTest.testSetCell(RowTest.java:95)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)&#13;
&#13;

      </failure>
    </testcase>
  </testsuite>
</testrun>
